// ======================
// New ACF location rules
// ======================

// Show if post has certain parent
function acf_rule_type_post_parent($choices) {
	$choices['Запись']['post_parent'] = 'Родительская запись';
	return $choices;
}
add_filter( 'acf/location/rule_types', 'acf_rule_type_post_parent' );

function acf_rule_values_post_parent($choices) {
	$post_type = 'slider';
	$posts = get_posts(array(
		'posts_per_page'			=>	-1,
		'post_type'					=> $post_type,
		'orderby'					=> 'menu_order title',
		'order'						=> 'ASC',
		'post_status'				=> 'any',
		'suppress_filters'			=> false,
		'update_post_meta_cache'	=> false,
	));
	
	if( $posts )
	{
		// sort into hierachial order!
		if( is_post_type_hierarchical( $post_type ) )
		{
			$posts = get_page_children( 0, $posts );
		}
		
		foreach( $posts as $page )
		{
			$title = '';
			$ancestors = get_ancestors($page->ID, 'page');
			if($ancestors)
			{
				continue;
			}
			
			$title .= apply_filters( 'the_title', $page->post_title, $page->ID );
			
			
			// status
			if($page->post_status != "publish")
			{
				$title .= " ($page->post_status)";
			}
			
			$choices[ $page->ID ] = $title;
			
		}
	
	}
	
	return $choices;
}
add_filter( 'acf/location/rule_values/post_parent', 'acf_rule_values_post_parent' );

function acf_rule_match_post_parent( $match, $rule, $options ) {
	$post_type = 'slider';

	if ( ! $options['post_id'] || $post_type !== get_post_type( $options['post_id'] ) )
		return false;
		
	$ancestors = get_ancestors( $options['post_id'], $post_type );
	$is_ancestor = in_array( $rule['value'], $ancestors );
	
	if ( '==' == $rule['operator'] ) { 
		$match = $is_ancestor;
	
	} elseif ( '!=' == $rule['operator'] ) {
		$match = ! $is_ancestor;
	}
	
	return $match;

}
add_filter( 'acf/location/rule_match/post_parent', 'acf_rule_match_post_parent', 10, 3 );